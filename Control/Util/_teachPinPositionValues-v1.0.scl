FUNCTION_BLOCK "_teachPinPositionValues"
TITLE = Function:Teach pin position values
{ S7_Optimized_Access := 'TRUE' }
AUTHOR : cyanezf
FAMILY : 'Control/Util'
NAME : _teachPinPositionValues
VERSION : 1.0

   VAR_INPUT 
      pin { ExternalWritable := 'False'} : Bool;
      position { ExternalWritable := 'False'} : Real;
      direction { ExternalWritable := 'False'} : Bool;   // 0=Forward; 1=Backward
   END_VAR

   VAR_OUTPUT 
      fwdPosEdgePosition { ExternalWritable := 'False'} : Real;
      fwdNegEdgePosition { ExternalWritable := 'False'} : Real;
      bwdPosEdgePosition { ExternalWritable := 'False'} : Real;
      bwdNegEdgePosition { ExternalWritable := 'False'} : Real;
   END_VAR

   VAR 
      fp : Bool;
   END_VAR

   VAR_TEMP 
      pinFp : Bool;
      pinFn : Bool;
   END_VAR


BEGIN
(*--

# Log
| version | date | author | description |
|:-------:|:----:|:------:|:------------|
| v1.0 | 2025-01-17 | cyanezf | First version |

# Dependencies
| Dependency |
|:-----------|
	
# Description
This function is used to save pin sensor position according to Axis position in forward and backward directions.

#
_Use [Markdown Live Preview](https://markdownlivepreview.com/) to watch this doc._
--*)

	// Update edges
	#pinFp := #pin AND NOT #fp;
	#pinFn := NOT #pin AND #fp;
	#fp := #pin;
	
	IF #pinFp AND NOT #direction THEN
	  #fwdPosEdgePosition := #position;
	END_IF;
	
	IF #pinFp AND #direction THEN
	  #bwdPosEdgePosition := #position;
	END_IF;
	
	IF #pinFn AND NOT #direction THEN
	  #fwdNegEdgePosition := #position;
	END_IF;
	
	IF #pinFn AND #direction THEN
	  #bwdNegEdgePosition := #position;
	END_IF;
	
	// Savel RLO
	ENO := true;
	
END_FUNCTION_BLOCK

